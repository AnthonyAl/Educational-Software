[
  {
    "name": "Μαθηματικά στην Πληροφορική",
    "code": 1,
    "description": "Σε όλες τις σχολές Πληροφορικής υπάρχουν μαθήματα μαθηματικών και συγκεκριμένα περιέχουν 'Ανάλυση 1/2', 'Εφαρμοσμένη Άλγεβρα', 'Πιθανότητες και Στατιστική' και 'Διακριτά μαθηματικά'. Σαφώς όλα αυτά τα μαθήματα διδάσκονται ξεχωριστά, αλλά για τις ανάγκες της παρουσιάσης αυτής θα περιγράφουν μαζί.",
    "paragraphs": [
      {
        "text": "Τα μαθήματα εξετάζουν την εφαρμογή των μαθηματικών στον τομέα της επιστήμης των υπολογιστών. Κατά τη διάρκεια του μαθήματος, εξετάζονται οι βασικές μαθηματικές έννοιες και τεχνικές που χρησιμοποιούνται για την ανάλυση, τον σχεδιασμό και την ανάπτυξη αλγορίθμων και λογισμικού.",
        "imageName": "maths1.jpg"
      },
      {
        "text": "Τα μαθήματα εξετάζουν θέματα όπως η λογική, οι συλλογιστικές δομές, οι συναρτήσεις και οι ακολουθίες, οι γράφοι, η θεωρία των αριθμών και οι πιθανότητες. Επίσης, εξετάζονται μαθηματικές μέθοδοι και τεχνικές που χρησιμοποιούνται στον τομέα του κρυπτογραφικού υπολογισμού, της ανάλυσης αλγορίθμων, της βελτιστοποίησης και της τεχνητής νοημοσύνης.",
        "imageName": ""
      },
      {
        "text": "Τα μαθήματα αποσκοπούν στην ανάπτυξη μαθηματικών δεξιοτήτων και την επίτευξη κατανόησης των θεμελιωδών αρχών που διέπουν την επιστήμη των υπολογιστών. Η κατανόηση των μαθηματικών αρχών συμβάλλει στην ανάπτυξη των δεξιοτήτων προγραμματισμού, την αντιμετώπιση προβλημάτων και την ανάπτυξη αποδοτικών αλγορίθμων και λογισμικού.",
        "imageName": "maths2.png"
      }
    ],
    "goals": [
      {
        "text": "Κατανόηση θεμελιωδών μαθηματικών εννοιών όπως η μαθηματική λογική, τα σύνολα, οι συναρτήσεις, οι ακολουθίες, οι γράφοι, η θεωρία των αριθμών και οι πιθανότητες."
      },
      {
        "text": "Εφαρμογή των μαθηματικών στον σχεδιασμό και την ανάλυση αλγορίθμων και τη βελτιστοποίησή τους."
      },
      {
        "text": "Ανάπτυξη δεξιοτήτων επίλυσης προβλημάτων που συναντώνται στην επιστήμη των υπολογιστών."
      },
      {
        "text": "Ανάπτυξη μαθηματικής ωριμότητας μέσω αυστηρής μαθηματικής σκέψης."
      },
      {
        "text": "Δημιουργία βάσης για προηγμένα μαθήματα επιστήμης υπολογιστών."
      }
    ],
    "extras": [
      {
        "title": "Introduction To Graph Theory",
        "url": "https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8"
      },
      {
        "title": "Point Transform Example",
        "url": "https://pyimagesearch.com/2014/08/25/4-point-opencv-getperspective-transform-example/"
      },
      {
        "title": "The Art of Computer Programming",
        "url": "https://www-cs-faculty.stanford.edu/~knuth/taocp.html"
      }
    ]
  },
  {
    "name": "Αντικειμενοστρεφής Προγραμματισμός με Java/C#",
    "code": 2,
    "description": "Ο αντικειμενοστραφής προγραμματισμός (Object Oriented Programming - OOP) είναι τόσο θεμελιώδες μέρος της ανάπτυξης λογισμικού που είναι δύσκολο να θυμηθούμε μια εποχή που οι άνθρωποι χρησιμοποιούσαν οποιαδήποτε άλλη προσέγγιση. Αυτές τις μέρες, η μεγαλύτερη ανάπτυξη λογισμικού εκτελείται με χρήση OOP. Χάρη στην ευρεία χρήση γλωσσών όπως η Java και η C#, η δημιουργία παραθυρικών και web εφαρμογών έγινε πιο εύκολη και γρήγορη. Αυτό ταυτόχρονα σημαίνει πως ένας προγραμματιστής τις περισσότερες φορές είναι αδύνατο να δημιουργήσει μία εφαρμογή αν δεν γνωρίζει αντικειμενοστραφή προγραμματισμό. Είναι λοιπόν πολύ σημαντικό για οποιονδήποτε προγραμματιστή που θέλει να υλοποιήσει λογισμικό να έχει μία πολύ καλή εξοικείωση με αντικειμεντοστραφείς γλώσσες προγραμματισμού, όπως η Java και η C#.",
    "paragraphs": [
      {
        "text": "Αντικείμενο του μαθήματος είναι η εισαγωγή στον αντικειμενοστραφή προγραμματισμό με πλήρη ανάλυση της γλώσσας προγραμματισμού Java και της C#.",
        "imageName": "oop1.jpg"
      },
      {
        "text": "Συγκεκριμένα, οι φοιτητές στα πρώτα μαθήματα εξοικειώνονται με τις βασικές δομές δεδομένων που υπάρχουν στις γλώσσες αυτές, την κληρονομικότητα, τον πολυμορφισμό, ενθυλάκωση, ειδικές κλάσεις, εξαιρέσεις, ειδικά θέματα, βιβλιοθήκες, interfaces, προσπέλαση αρχείων, access modifiers, non-access modifiers.",
        "imageName": "oop2.png"
      },
      {
        "text": "Σε επόμενα μαθήματα οι φοιτητές εξοικειώνονται με IDE (Integraded Development Envriment) για τη δημιουργία παραθυρικών και web εφαρμογών μέσω Java και C#.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Εξοικείωση με τις βασικές αρχές που διέπουν τον αντικειμενοστρεφή προγραμματισμό"
      },
      {
        "text": "Ικανότητα υλοποίησης αντικειμενοστρεφών προγραμμάτων"
      },
      {
        "text": "Κατανόηση και χρήση τάξεων (classes) και διεπαφών (interfaces) στη Java και στη C#"
      },
      {
        "text": "Κατανόηση του συντακτικού της Java και της C#"
      },
      {
        "text": "Ικανότητα σχεδίασης και ανάπτυξης λογισμικού για επίλυση βασικών προβλημάτων"
      },
      {
        "text": "Εξοικείωση με κατάλληλα εργαλεία ανάπτυξης εφαρμογών με Java και C#"
      }
    ],
    "extras": [
      {
        "title": "Inheritance in Java",
        "url": "https://www.javatpoint.com/inheritance-in-java"
      },
      {
        "title": "ASP.NET Web Apps",
        "url": "https://dotnet.microsoft.com/en-us/apps/aspnet/web-apps"
      },
      {
        "title": "Java Swing",
        "url": "https://www.javatpoint.com/java-swing"
      }
    ]
  },
  {
    "name": "Εισαγωγή  στη C/C++ και Python",
    "code": 3,
    "description": "Ένας μαθητευόμενος Πληροφορικός είναι απαραίτητο να έχει μία βασική εξοικείωση με τις δημοφιλείς γλώσσες προγραμματισμού που χρησιμοποιούνται αυτή τη στιγμή. Οι γλώσσες που επιλέγονται πιο συχνά σε εκπαίδευση είναι η C/C++ και η Python. Η και C και C++ είναι γλώσσες χαμηλότερου επιπέδου ενώ η Python είναι μία scripting γλώσσα υψηλότερου επιπέδου.",
    "paragraphs": [
      {
        "text": "Κατά τη διάρκεια των μαθημάτων  εξετάζονται οι βασικές αρχές και οι έννοιες που σχετίζονται με κάθε γλώσσα προγραμματισμού ξεχωριστά. Ξεκινώντας από τη γλώσσα C, εξετάζονται οι βασικές δομές, όπως μεταβλητές, τύποι δεδομένων, ελέγχους ροής και συναρτήσεις. Στη συνέχεια, μεταφέρεται η προσοχή στη γλώσσα C++, όπου εξετάζονται προηγμένες έννοιες όπως οι αντικειμενοστραφείς προγραμματισμός, η κληρονομικότητα, πολυμορφισμός και οι συνδεδεμένοι πίνακες.",
        "imageName": "cpp.png"
      },
      {
        "text": "Στο μάθημα εξετάζεται επίσης η γλώσσα προγραμματισμού Python, που έχει κερδίσει μεγάλη δημοτικότητα λόγω της απλότητας και της ευελιξίας της. Εξετάζονται οι βασικές δομές της Python, όπως λίστες, διαδραστική ανάπτυξη, συναρτήσεις και βιβλιοθήκες.",
        "imageName": "cpp2.png"
      },
      {
        "text": "Τα μαθήματα παρέχουν τη βάση για την κατανόηση των βασικών αρχών προγραμματισμού και την απόκτηση των δεξιοτήτων που απαιτούνται για την ανάπτυξη λογισμικού με τις συγκεκριμένες γλώσσες. Οι σπουδαστές μαθαίνουν πώς να γράφουν κώδικα, να επιλύουν προβλήματα και να αναπτύσσουν εφαρμογές χρησιμοποιώντας τις γλώσσες C, C++ και Python.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Εξοικείωση με τις βασικές γλώσσες προγραμματισμού."
      },
      {
        "text": "Κατανόηση της διαφοράς ανάμεσα στις γλώσσες υψηλού επιπέδου και τις γλώσσες χαμηλού επιπέδου."
      },
      {
        "text": "Υλοποίηση προγραμμάτων για την επίλυση πραγματικών προγραμμάτων."
      },
      {
        "text": "Κατανόηση του συντακτικού στις γλώσσες προγραμματισμού."
      },
      {
        "text": "Ικανότητα αποσφαλμάτωσης κώδικα (debugging)."
      }
    ],
    "extras": [
      {
        "title": "Become a Python Master",
        "url": "https://programiz.pro/learn/master-python"
      },
      {
        "title": "Top 10 Python Libraries",
        "url": "https://www.edureka.co/blog/python-libraries/"
      },
      {
        "title": "Learn C++ Programming",
        "url": "https://www.programiz.com/cpp-programming"
      }
    ]
  },
  {
    "name": "Δομές Δεδομένων και Αλγόριθμοι",
    "code": 4,
    "description": "Τα μαθήματα 'Δομές Δεδομένων' και 'Αλγόριθμοι' αποτελούν δύο από τα πιο θεμελιώδη μαθήματα στον τομέα της Πληροφορικής και είναι απαραίτητα για την κατανόηση και τη σύνθεση κώδικα ανεξαρτήτως της γλώσσας προγραμματισμού. Γι' αυτό το λόγο πρέπει ο φοιτητής να έχει μία καλή κατανόηση αυτών των μαθημάτων αν θέλει να βελτιώσει την ικανότητα επίλυσης προβλημάτων. Σημειώνεται οι ύλες των μαθημάτων αυτών είναι αρκετά συμπληρωματικές μεταξύ τους και γι' αυτό επιλέχθηκε να παρουσιαστούν μαζί.",
    "paragraphs": [
      {
        "text": "Στις 'Δομές Δεδομένων' το αντικείμενο του μαθήματος είναι η μελέτη των βασικών δομών δεδομένων που χρησιμοποιούνται στην ανάπτυξη αλγορίθμων. Έμφαση δίνεται στο χρόνο εκτέλεσης των βασικών λειτουργιών των δομών δεδομένων και στον αναλυτικό προσδιορισμό του πλήθους των βασικών εντολών που απαιτούνται για την ολοκλήρωσή τους. Επίσης, τεκμηριώνεται αναλυτικά και ο χώρος που απαιτεί κάθε δομή δεδομένων, καθώς επίσης και ο χρόνος εκτέλεσης των βασικών λειτουργιών.",
        "imageName": "alg3.png"
      },
      {
        "text": "Το αντικείμενο του μαθήματος 'Αλγόριθμοι' είναι η μελέτη τεχνικών για την επίλυση βασικών υπολογιστικών προβλημάτων και η παρουσίασή τους χωρίς αναφορά σε συγκεκριμένη γλώσσα προγραμματισμού. Τα προβλήματα που μελετούνται είναι κεντρικά στην επιστήμη της Πληροφορικής και ο σχεδιασμός αποδοτικών τεχνικών επίλυσης για αυτά τα συγκεκριμένα προβλήματα συντελεί στη γρήγορη επίλυση ενός πολύ μεγάλου αριθμού άλλων υπολογιστικών προβλημάτων που ανακύπτουν στα διάφορα πεδία εφαρμογών της Πληροφορικής. Στη παρουσίαση των σχετικών αλγορίθμων, έμφαση δίνεται στο χρόνο εκτέλεσης τους και σε κάθε περίπτωση αποδεικνύεται μαθηματικά το πλήθος των βασικών εντολών που απαιτούνται για την ολοκλήρωσή τους. Επίσης, τεκμηριώνεται αναλυτικά και η ποιότητα της λύσης που προσφέρει μία αλγοριθμική τεχνική στις περιπτώσεις που η επίτευξη της βέλτιστης λύσης είναι πολύ χρονοβόρα διαδικασία.",
        "imageName": "alg1.png"
      },
      {
        "text": "Στο μάθημα των Αλγορίθμων αξιοποιούνται γνώσεις της Ανάλυσης, ώστε να επιτευχθούν οι αναλυτικές μαθηματικές αποδείξεις που εμφανίζονται κατά την ανάλυση πολυπλοκότητας διαφόρων αλγορίθμων.",
        "imageName": "alg2.PNG"
      },
      {
        "text": "Μεταξύ άλλων παρουσιάζονται αλγόριθμοι για προβλήματα ταξινόμησης, αναζήτησης, για προβλήματα γραφημάτων. Επίσης, παρουσιάζονται αλγόριθμοι για βασικούς αριθμητικούς υπολογισμούς (πολλαπλασιασμός πινάκων, υπολογισμός τιμής πολυωνύμου, γρήγορος μετασχηματισμός Fourier).",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Εξοικείωση με τις διάφορες δομές δεδομένων που υπάρχουν σε γλώσσες προγραμματισμού για την επίλυση υπολογιστικών προβλημάτων."
      },
      {
        "text": "Ικανότητα αποτίμησης του χρόνου εκτέλεσης των βασικών λειτουργιών μίας δομής δεδομένων ανεξαρτήτως της γλώσσας προγραμματισμού."
      },
      {
        "text": "Ικανότητα εκτίμησης του χρόνου εκτέλεσης ενός αλγορίθμου σε οποιαδήποτε γλώσσα προγραμματισμού."
      },
      {
        "text": "Κατανόηση και επίλυση αλγοριθμικών προβλημάτων και διάκρισή τους σε συστατικά μέρη."
      },
      {
        "text": "Σύνθεση νέων αλγορίθμων για επίλυση προβλημάτων σε ικανοποιητικό χρόνο."
      }
    ],
    "extras": [
      {
        "title": "Essential Data Structures in Java",
        "url": "https://www.java67.com/2013/08/ata-structures-in-java-programming-array-linked-list-map-set-stack-queue.html"
      },
      {
        "title": "Depth-First Search Visualization",
        "url": "https://www.cs.usfca.edu/~galles/visualization/DFS.html"
      },
      {
        "title": "B-Tree Visualization",
        "url": "https://www.cs.usfca.edu/~galles/visualization/BTree.html"
      }
    ]
  },
  {
    "name": "Μεταγλωττιστές",
    "code": 5,
    "description": "Το μάθημα ασχολείται με τη Θεωρία των Γλωσσών, την κατασκευή αυτομάτων αναγνώρισης λεκτικών μονάδων, αλλά και με επιμέρους τμήματα, που αποτελούν τη βάση της δημιουργίας ενός μεταγλωττιστή (compiler) μιας γλώσσας προγραμματισμού.",
    "paragraphs": [
      {
        "text": "Το μάθημα αναλύει τη διαδικασία της μεταγλώττισης από την αρχή μέχρι το τέλος και εξετάζει τα βασικά στάδια που περιλαμβάνονται σε έναν μεταγλωττιστή. Αυτά περιλαμβάνουν τη φάση της λεκτικής ανάλυσης (analysis) όπου ο πηγαίος κώδικας επεξεργάζεται και αναλύεται για τη δημιουργία μιας εσωτερικής αναπαράστασης, τη φάση της συντακτικής ανάλυσης (parsing) όπου ο πηγαίος κώδικας ελέγχεται για συμμόρφωση με τη γραμματική της γλώσσας, τη φάση της σημασιολογικής ανάλυσης (semantic analysis) όπου ελέγχονται οι σημασιολογικοί κανόνες της γλώσσας και την παραγωγή ενδιάμεσου κώδικα, τη φάση της βελτιστοποίησης (optimization) όπου ο ενδιάμεσος κώδικας βελτιώνεται ώστε να επιτευχθεί μεγαλύτερη αποτελεσματικότητα και τη φάση της γεννήτριας κώδικα (code generation) όπου ο τελικός assemlby κώδικας παράγεται από τον ενδιάμεσο κώδικα.",
        "imageName": "comp1.PNG"
      },
      {
        "text": "Επιπλέον, το μάθημα αναλύει τις βασικές δομές δεδομένων και αλγορίθμους που χρησιμοποιούνται στην μεταγλώττιση, όπως πίνακες συμβόλων, συντακτικά δένδρα, αυτόματα και γραφήματα εξαρτήσεων.",
        "imageName": ""
      },
      {
        "text": "Το μάθημα των μεταγλωττιστών είναι σημαντικό για την κατανόηση της λειτουργίας των γλωσσών προγραμματισμού, την αποτελεσματική μεταγλώττιση προγραμμάτων και τη βελτιστοποίηση της απόδοσης του κώδικα.",
        "imageName": "comp2.jpg"
      }
    ],
    "goals": [
      {
        "text": "Κατανόηση του τι είναι γλώσσα και γραμματική και πώς συμβολίζονται."
      },
      {
        "text": "Εξοικείωση με διάφορους τρόπους προσδιορισμού σύνταξης (BNF, EBNF, συντακτικά διαγράμματα)."
      },
      {
        "text": "Ικανότητα αναγνώρισης κανονικών εκφράσεων και υλοποίησης τους στο FLEX."
      },
      {
        "text": "Εξοικείωση με στρατηγικές συντακτικής ανάλυσης."
      },
      {
        "text": "Ικανότητα υλοποίησης ενός αυτομάτου στοίβας (ντετερμινιστικό και μη-ντετερμινιστικό)."
      }
    ],
    "extras": [
      {
        "title": "flex & bison",
        "url": "https://web.iitd.ac.in/~sumeet/flex__bison.pdf"
      },
      {
        "title": "Mini-C-Language-to-MIPS-Assembly-Language",
        "url": "https://github.com/Subalzero/Mini-C-Language-to-MIPS-Assembly-Language"
      },
      {
        "title": "Practical parsing with Flex and Bison",
        "url": "https://begriffs.com/posts/2021-11-28-practical-parsing.html"
      }
    ]
  },
  {
    "name": "Αρχές και Εφαρμογές Σημάτων και Συστημάτων",
    "code": 6,
    "description": "Το γνωστικό πεδίο της θεωρίας και των εφαρμογών των Σημάτων και Συστημάτων αναπτύσσεται με ταχύ και αδιάκοπο ρυθμό επί μια σειρά δεκαετιών και πλέον αποτελεί αντικείμενο θεμελίωσης της επιστήμης σε προπτυχιακά προγράμματα σπουδών διεθνώς, συμπεριλαμβανομένων και προγραμμάτων σπουδών στη σύγχρονη Πληροφορική. Παράλληλα, θέτει τα θεμέλια για τη διδασκαλία εξειδικευμένων τεχνολογικών μαθημάτων, όπως Αναγνώριση Προτύπων, Ανάλυση Εικόνας, Τεχνητή Όραση, Τηλεπικοινωνιακά Συστήματα, Δίκτυα Υπολογιστών, Συστήματα Πολυμέσων, Επεξεργασία Φωνής κ.ά.",
    "paragraphs": [
      {
        "text": "Το μάθημα 'Αρχές και Εφαρμογές Σημάτων και Συστημάτων' ασχολείται με τη μελέτη των βασικών αρχών και των μαθηματικών εργαλείων που χρησιμοποιούνται για την ανάλυση και την κατανόηση των σημάτων και των συστημάτων. Τα σήματα αναπαριστούν φυσικά, ηλεκτρικά, ή άλλα είδη πληροφορίας, ενώ τα συστήματα αποτελούν τις διαδικασίες ή τις δομές που επεξεργάζονται τα σήματα.",
        "imageName": "sp1.PNG"
      },
      {
        "text": "Κατά τη διάρκεια του μαθήματος, εξετάζονται οι βασικές έννοιες των σημάτων και των συστημάτων, όπως η διακριτή και η συνεχής χρονική αναπαράσταση, οι πράξεις μετασχηματισμού και η συνέλιξη. Αναλύονται οι μέθοδοι μετασχηματισμού, όπως ο μετασχηματισμός Fourier, ο μετασχηματισμός Laplace και ο μετασχηματισμός Z. ",
        "imageName": "sp2.png"
      },
      {
        "text": "Το μάθημα αποτελεί σημαντική βάση για περαιτέρω μελέτη σε πεδία όπως η ψηφιακή επεξεργασία σήματος. Επίσης, εφαρμόζεται σε πολλούς τομείς, όπως η τηλεπικοινωνία, η ιατρική και η μουσική, καθώς αποτελεί τη θεωρητική βάση για την ανάλυση και τη σχεδίαση των αντίστοιχων συστημάτων σε αυτούς τους τομείς.",
        "imageName": "sp3.png"
      }
    ],
    "goals": [
      {
        "text": "Δυνατότητα σχεδιασμού και υλοποίησης της διαδικασία της (περιοδικής) δειγματοληψίας."
      },
      {
        "text": "Εξοικείωση με την έννοια του συνεχούς και διακριτού μετασχηματισμού Fourier, καθώς και με το θεώρημα Shannon Hartley."
      },
      {
        "text": "Εξοικείωση με Αναλογικά και Ψηφιακά Συστήματα Επικοινωνίας."
      },
      {
        "text": "Κατανόηση των εννοιών της συνέλιξης, της κρουστικής απόκρισης και της συνάρτησης μεταφοράς γραμμικών, χρονικά αναλλοίωτων συστημάτων."
      }
    ],
    "extras": [
      {
        "title": "Discrete-Time Signal Processing",
        "url": "https://research.iaun.ac.ir/pd/naghsh/pdfs/UploadFile_2230.pdf"
      },
      {
        "title": "Understanding Digital Signal Processing",
        "url": "https://www.mikrocontroller.net/attachment/341426/Understanding_digital_signal_processing.pdf"
      },
      {
        "title": "A Pragmatic Introduction to Signal Processing",
        "url": "https://terpconnect.umd.edu/~toh/spectrum/"
      }
    ]
  },
  {
    "name": "Λειτουργικά Συστήματα",
    "code": 7,
    "description": "Το μάθημα Λειτουργικά συστήματα να παρέχει εκπαίδευση σε προγραμματιστές για την κατασκευή καινοτόμων προγραμμάτων. Πολλές εταιρείες χρησιμοποιούν ειδικούς για την κατασκευή και συντήρηση λογισμικού για τη νεότερη γενιά λειτουργικών συστημάτων. Ένα λειτουργικό σύστημα μπορεί να θεωρηθεί ως ο διαχειριστής πόρων του υπολογιστή. Ως εκ τούτου, μπορεί να είναι χρήσιμο να μάθετε πώς να επικοινωνείτε με ένα λειτουργικό σύστημα για να κατανοήσετε καλύτερα την λειτουργία του υπολογιστή, τους πόρους και πώς πρέπει να αντιμετωπίσετε προβλήματα.",
    "paragraphs": [
      {
        "text": "Ένα πρόγραμμα μαθημάτων εισαγωγής στο υλικό υπολογιστών και στα λειτουργικά συστήματα μπορεί να καλύπτει θέματα όπως:",
        "imageName": "os1.png"
      },
      {
        "text": "Τις βασικές έννοιες του υλικού συστήματος και του λειτουργικού συστήματος.",
        "imageName": ""
      },
      {
        "text": "Πώς λειτουργούν τα νήματα (threads) και η μνήμη σε ένα λειτουργικό σύστημα.",
        "imageName": "os2.jpg"
      },
      {
        "text": "Πώς αναπαρίστανται τα δεδομένα σε έναν υπολογιστή και πώς οι υπολογιστές ερμηνεύουν τις εντολές για τη χρήση και την τροποποίηση δεδομένων προκειμένου να επιλύσουν προβλήματα.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Ικανότητα περιγραφής της αρχιτεκτονικής, της δομής και διάκριση των κατηγοριών των Λειτουργικών συστημάτων."
      },
      {
        "text": "Κατανόηση των εννοιών της διεργασίας και του νήματος."
      },
      {
        "text": "Εξοικείωση με αλγορίθμους πολυεπεξεργασίας (multiprocessing)."
      },
      {
        "text": "Εξοικείωση με την λειτουργία του συστήματος αρχείων."
      },
      {
        "text": "Ικανότητα ανάπτυξης αλγορίθμων χρονοδρομολόγησης της CPU."
      },
      {
        "text": "Ικανότητα διάγνωσης και επίλυσης προβλημάτων που εμφανίζονται σε έναν υπολογιστή."
      }
    ],
    "extras": [
      {
        "title": "Bash Cookbook, 2nd Edition",
        "url": "https://www.oreilly.com/library/view/bash-cookbook-2nd/9781491975329/"
      },
      {
        "title": "Mastering Ubuntu Server - Fourth Edition",
        "url": "https://www.packtpub.com/product/mastering-ubuntu-server-fourth-edition/9781803234243"
      },
      {
        "title": "Guide to Operating Systems (MindTap Course List) 6th Edition",
        "url": "https://www.amazon.com/Guide-Operating-Systems-MindTap-Course/dp/0357433831"
      }
    ]
  }
]