[
  {
    "name": "Τεχνολογία Λογισμικού",
    "code": 1,
    "description": "Η Τεχνολογία Λογισμικού (Software engineering) είναι μία engineering-based προσέγγιση στην ανάπτυξη λογισμικού. Σύμφωνα με αυτή ορίζονται μέθοδοι σχεδίασης, ανάπτυξης, ελέγχου και συντήρησης λογισμικού που δημιουργείται για έναν επιχειρησιακό σκοπό.",
    "paragraphs": [
      {
        "text": "Στη Τεχνολογία Λογισμικού χρησιμοποιούνται συγκεκριμένες τεχνικές για την ανάπτυξη λογισμικού γνωστές ως Μοντέλα κύκλου ζωής λογισμικού (Μοντέλο του Καταρράκτη, Rational Unified Process, κ.ά.). Τα μοντέλα αυτά επιτρέπουν στους προγραμματιστές να κάνουν πιο εύκολα την ανάλυση απαιτήσεων και να οργανώσουν καλύτερα την υλοποίηση.",
        "imageName": ""
      },
      {
        "text": "Επίσης, στα Μοντέλα κύκλου ζωής οι προγραμματιστές χρησιμοποιούν συγκεκριμένες γλώσσες, γνωστές ως Γλώσσες μοντελοποίησης (π.χ. UML), οι οποίες τους επιτρέπουν να σχεδιάσουν ένα λογισμικό χωρίς να γράφουν κώδικα. Έτσι μπορούν να κάνουν ελέγχους κατά την ανάλυση απαιτήσεων και να εντοπίσουν σχεδιαστικά λάθη πριν την υλοποίηση.",
        "imageName": ""
      },
      {
        "text": "Τέλος στην Τεχνολογία Λογισμικού γίνεται και μία παρουσίαση των CASE tools. Πρόκειται για ειδικά λογισμικά τα οποία δέχονται σαν είσοδο ένα λογισμικό εκφασμένο σε μία γλώσσα μοντελοποίησης και παράγουν αυτόματα τον κώδικα που υλοποιεί το λογισμικό.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Κατανόηση του πώς γίνεται η ανάλυση απαιτήσεων για ένα λογισμικό."
      },
      {
        "text": "Εξοικείωση με τη γλώσσα μοντελοποίησης UML."
      },
      {
        "text": "Χρήση ενός Μοντέλου κύκλου ζωής για την υλοποίηση ενός λογισμικού."
      },
      {
        "text": "Εξοικείωση με ορισμένα CASE tools."
      }
    ],
    "extras": [
      {
        "title": "UML Class Diagram",
        "url": "https://www.javatpoint.com/uml-class-diagram"
      },
      {
        "title": "Software Case Tools Overview",
        "url": "https://www.tutorialspoint.com/software_engineering/case_tools_overview.htm"
      },
      {
        "title": "UML for Java Programmers",
        "url": "https://www.csd.uoc.gr/~hy252/references/UML_for_Java_Programmers-Book.pdf"
      }
    ]
  },
  {
    "name": "Σύγχρονα Θέματα Τεχνολογίας Λογισμικού - Λογισμικό για Κινητές Συσκευές",
    "code": 2,
    "description": "Στο μάθημα Σύγχρονα Θέματα Τεχνολογίας Λογισμικού αναλύονται περιληπτικά τα δημοφιλέστερα λειτουργικά συστήματα κινητών συσκευών, καθώς και τα εργαλεία ανάπτυξης εφαρμογών σε αυτά, ωστόσο η ύλη περιλαμβάνει κυρίως τη χρήση της αντικειμενοστρεφούς γλώσσας προγραμματισμού Java, για την ανάπτυξη εφαρμογών σε κινητές συσκευές υπό το λειτουργικό σύστημα Android. Ενδεικτικά, η ανάπτυξη των mobile apps υλοποιείται με τη χρήση του περιβάλλοντος ανάπτυξης λογισμικού Android Studio. Επιπλέον το μάθημα καλύπτει και την ύλη που αφορά στους αισθητήρες των κινητών συσκευών, στις υπηρεσίες γεωεντοπισμού και σε πλήθος άλλων προχωρημένων τεχνικών προγραμματισμού (asynchronous programming, android services, broadcast receivers, android intents).",
    "paragraphs": [
      {
        "text": "Το μάθημα συνδέεται άμεσα με την Τεχνολογία Λογισμικού, καθώς εξετάζει παρόμοια μοντέλα ανάπτυξης λογισμικού και εστιάζει στην πρακτική εφαρμογή τους με σκοπό την αναπτυξη εφαρμογών για κινητά, web και desktop.",
        "imageName": ""
      },
      {
        "text": "Επιπλέον γίνεται μία επεκτεταμένη χρήση γλωσσών αντικειμενοστραφούς προγραμματισμού, όπως Java και C\\# με σκοπό την εξοικείωση με σύγχρονα εργαλεία ανάπτυξης όπως το Android Studio, Spring Boot, MVC και άλλα.",
        "imageName": ""
      },
      {
        "text": "Δίνεται επίσης έμφαση στην αλληλεπίδραση με βάσεις δεδομενών, τόσο SQL (SQLite) όσο και NoSQL (Firebase).",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Ικανότητα ανάλυσης και σύγκρισης μοντέλων ανάπτυξης λογισμικού"
      },
      {
        "text": "Ανάπτυξη native mobile apps κάνοντας χρήση του Android SDK"
      },
      {
        "text": "Ανάπτυξη web apps μέσω MVC μοντέλου"
      },
      {
        "text": "Εξοικείωση με τις πλέον σύγχρονες υπηρεσίες Cloud και Mobile backend as a service που παρέχει η Firebase"
      }
    ],
    "extras": [
      {
        "title": "Android Developers Blog",
        "url": "https://android-developers.googleblog.com/"
      },
      {
        "title": "Build Your First Android App in Java",
        "url": "https://developer.android.com/codelabs/build-your-first-android-app"
      },
      {
        "title": "Firebase",
        "url": "https://firebase.google.com/"
      }
    ]
  },
  {
    "name": "Τεχνολογίες Ανάπτυξης Ηλεκτρονικών Παιχνιδιών",
    "code": 3,
    "description": "Το μάθημα 'Τεχνολογίες Ανάπτυξης Ηλεκτρονικών Παιχνιδιών' ασχολείται με την εξέλιξη και την εφαρμογή τεχνολογιών που σχετίζονται με την ανάπτυξη ηλεκτρονικών παιχνιδιών. Τα ηλεκτρονικά παιχνίδια αναφέρονται σε παιχνίδια που λειτουργούν σε ψηφιακό περιβάλλον, όπως υπολογιστές, κονσόλες παιχνιδιών, κινητές συσκευές και άλλες πλατφόρμες.",
    "paragraphs": [
      {
        "text": "Κατά τη διάρκεια του μαθήματος, εξετάζονται οι βασικές αρχές και οι τεχνολογίες που χρησιμοποιούνται στην ανάπτυξη ηλεκτρονικών παιχνιδιών. Αναλύονται οι γλώσσες προγραμματισμού και τα εργαλεία ανάπτυξης παιχνιδιών, όπως το Unity, το Unreal Engine και άλλα περιβάλλοντα ανάπτυξης. Επίσης, εξετάζονται οι τεχνικές ανάπτυξης γραφικών, τα συστήματα φυσικής προσομοίωσης, οι αλγόριθμοι τεχνητής νοημοσύνης και άλλες τεχνολογίες που σχετίζονται με τη δημιουργία ρεαλιστικών και απολαυστικών παιχνιδιών.",
        "imageName": ""
      },
      {
        "text": "Το μάθημα επικεντρώνεται επίσης στη διαδικασία ανάπτυξης παιχνιδιού, συμπεριλαμβανομένων των σταδίων σχεδίασης, ανάπτυξης περιεχομένου, δοκιμής και αποσφαλμάτωσης. Εξετάζονται επίσης θέματα όπως η διαχείριση πόρων, η απόδοση, η πολυπλοκότητα και η αλληλεπίδραση του παίκτη με το παιχνίδι.",
        "imageName": ""
      },
      {
        "text": "Το μάθημα αποτελεί σημαντική βάση για όσους επιθυμούν να εισέλθουν στον κλάδο της ανάπτυξης ηλεκτρονικών παιχνιδιών και να αναπτύξουν τις δεξιότητες που απαιτούνται για τη δημιουργία παιχνιδιών υψηλής ποιότητας και απήχησης στην αγορά.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Αναγνώριση των συνιστωσών ενός ηλεκτρονικού παιχνιδιού."
      },
      {
        "text": "Ικανότητα ανάπτυξης ηλεκτρονικών παιχνιδιών μέσω realtime 3D engines όπως Unity και Unreal Engine."
      },
      {
        "text": "Εξοικείωση με βασικά μοντέλα τεχνητής νοημοσύνης όπως finite state machines"
      },
      {
        "text": "Εξοικείωση με τα διάφορα συστατικά ηλεκτρονικών παιχνιδιών (π.χ. 3D μοντέλα, sprites, animations, κ.λπ.)"
      }
    ],
    "extras": [
      {
        "title": "SFML Game Development By Example",
        "url": "https://www.amazon.com/SFML-Development-Example-Raimondas-Pupius/dp/1785287346"
      },
      {
        "title": "Unity Real-Time Development Platform",
        "url": "https://unity.com/"
      },
      {
        "title": "Unreal Engine",
        "url": "https://www.unrealengine.com/en-US"
      }
    ]
  },
  {
    "name": "Αλληλεπίδραση ανθρώπου-υπολογιστή",
    "code": 4,
    "description": "Η αλληλεπίδραση ανθρώπου-υπολογιστή ασχολείται με τον σχεδιασμό των διεπαφών που επιτρέπουν στους χρήστες να αλληλεπιδρούν με τους υπολογιστές και τα συστήματα πληροφορικής με έναν φιλικό, αποτελεσματικό και αποδοτικό τρόπο.",
    "paragraphs": [
      {
        "text": "Κατά τη διάρκεια του μαθήματος, εξετάζονται οι αρχές της ανθρωποκεντρικής σχεδίασης, συμπεριλαμβανομένων των αναγκών και των χαρακτηριστικών των χρηστών, των κοινωνικών παραμέτρων και του περιβάλλοντος. Εξετάζονται οι μέθοδοι συλλογής δεδομένων για την ανάλυση των αναγκών των χρηστών και τη σχεδίαση των διεπαφών. Επίσης, εξετάζονται οι αρχές του σχεδιασμού διεπαφών και οι τεχνικές για τη δημιουργία χρήσιμων, ευχάριστων και αποδοτικών διεπαφών.",
        "imageName": ""
      },
      {
        "text": "Το μάθημα επικεντρώνεται επίσης στην αξιολόγηση των διεπαφών χρήστη, όπως οι μέθοδοι και τα εργαλεία για τη συλλογή και την ανάλυση των δεδομένων αξιολόγησης, καθώς και οι τεχνικές για τη βελτίωση των διεπαφών μετά την αξιολόγηση.",
        "imageName": ""
      },
      {
        "text": "Το μάθημα αποτελεί σημαντική βάση για τους σχεδιαστές και τους ανάπτυξης διεπαφών χρήστη, καθώς και για τους ερευνητές στον τομέα της αλληλεπίδρασης ανθρώπου-υπολογιστή. Επίσης, αποτελεί σημαντικό πόρο για την κατανόηση της σημασίας της ανθρωποκεντρικής σχεδίασης και της αλληλεπίδρασης μεταξύ ανθρώπου και υπολογιστή σε διάφορους τομείς, όπως οι ψηφιακές εφαρμογές, οι ιστοσελίδες, οι κινητές συσκευές και άλλες τεχνολογίες.",
        "imageName": ""
      }
    ],
    "goals": [
      {
        "text": "Αναγνώριση και κατανόηση των αρχών σχεδιασμού ενός συστήματος διεπαφής."
      },
      {
        "text": "Δυνατότητα σχεδίασης εύχρηστων συστημάτων διεπαφής με τους χρήστες για οποιαδήποτε εφαρμογή."
      },
      {
        "text": "Εξοικείωση με κάποια οπτική γλώσσα προγραμματισμού για υλοποίηση εύχρηστων συστημάτων διεπαφής."
      },
      {
        "text": "Ικανότητα ανάλυσης και σχεδίασης ενός συστήματος διεπαφής μέσω της ιεραρχικής ανάλυσης εργασιών."
      },
      {
        "text": "Ικανότητα αξιολόγησης και βελτίωσης ενός συστήματος διεπαφής."
      }
    ],
    "extras": [
      {
        "title": "React js",
        "url": "https://react.dev/"
      },
      {
        "title": "User Interface Design Basics",
        "url": "https://www.usability.gov/what-and-why/user-interface-design.html"
      },
      {
        "title": "UI vs. UX",
        "url": "https://www.usertesting.com/resources/topics/ui-vs-ux"
      }
    ]
  }
]